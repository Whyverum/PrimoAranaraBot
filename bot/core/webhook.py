from typing import Any

from aiohttp import web
from aiogram.types import Update

from .bots import dp, bot
from middleware import loggers

class WebhookApp:
    """–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ aiohttp –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook-–∑–∞–ø—Ä–æ—Å–æ–≤."""

    def __init__(self, host: str = "0.0.0.0", port: int = 8080) -> None:
        self.host = host
        self.port = port
        self.app: web.Application = web.Application()
        self.app.router.add_post("/webhook", self.handle_update)
        self.runner: web.AppRunner | None = None
        self.site: web.TCPSite | None = None

    @staticmethod
    async def handle_update(request: web.Request) -> web.Response:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram."""
        try:
            update_json: dict[str, Any] = await request.json()
            update: Update = Update.model_validate(update_json)
            await dp.feed_update(bot=bot, update=update)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook-–∑–∞–ø—Ä–æ—Å–∞: {e}")
            return web.Response(status=500)

        return web.Response(status=200)

    async def start(self) -> None:
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        self.runner = web.AppRunner(self.app)
        await self.runner.setup()
        self.site = web.TCPSite(self.runner, self.host, self.port)
        await self.site.start()
        loggers.info(f"üåç Webhook —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://{self.host}:{self.port}")

    async def stop(self) -> None:
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        if self.runner:
            await self.runner.cleanup()
